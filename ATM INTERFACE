import java.util.ArrayList;
import java.util.Scanner;

public class ATM {
    private double balance;n
    private ArrayList<String> transactionHistory;
    private int pin;
    private final Scanner scanner;

    public ATM() {
        this.balance = 0.0;
        this.transactionHistory = new ArrayList<>();
        this.pin = 1234; // Default PIN
        this.scanner = new Scanner(System.in);
    }

    public static void main(String[] args) {
        ATM atm = new ATM();
        if (atm.verifyPin()) {
            atm.run();
        } else {
            System.out.println("Too many incorrect attempts. Exiting...");
        }
    }

    private boolean verifyPin() {
        int attempts = 0;
        while (attempts < 3) {
            System.out.print("Enter your PIN: ");
            int inputPin = scanner.nextInt();
            if (inputPin == pin) {
                return true;
            } else {
                attempts++;
                System.out.println("Incorrect PIN. Try again.");
            }
        }
        return false;
    }

    public void run() {
        boolean running = true;
        while (running) {
            printMenu();
            int choice = scanner.nextInt();
            switch (choice) {
                case 1:
                    checkBalance();
                    break;
                case 2:
                    depositMoney();
                    break;
                case 3:
                    withdrawMoney();
                    break;
                case 4:
                    viewTransactionHistory();
                    break;
                case 5:
                    changePin();
                    break;
                case 6:
                    System.out.println("Exiting...");
                    running = false;
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private void printMenu() {
        System.out.println("\nATM Menu:");
        System.out.println("1. Check Balance");
        System.out.println("2. Deposit Money");
        System.out.println("3. Withdraw Money");
        System.out.println("4. View Transaction History");
        System.out.println("5. Change PIN");
        System.out.println("6. Exit");
        System.out.print("Choose an option: ");
    }

    private void checkBalance() {
        System.out.printf("Current Balance: $%.2f%n", balance);
    }

    private void depositMoney() {
        System.out.print("Enter the amount to deposit: $");
        double amount = scanner.nextDouble();
        if (amount > 0) {
            balance += amount;
            transactionHistory.add("Deposited: $" + amount);
            System.out.printf("Successfully deposited $%.2f%n", amount);
        } else {
            System.out.println("Invalid amount. Please try again.");
        }
    }

    private void withdrawMoney() {
        System.out.print("Enter the amount to withdraw: $");
        double amount = scanner.nextDouble();
        if (amount > 0 && amount <= balance) {
            balance -= amount;
            transactionHistory.add("Withdrew: $" + amount);
            System.out.printf("Successfully withdrew $%.2f%n", amount);
        } else {
            System.out.println("Invalid amount or insufficient balance. Please try again.");
        }
    }

    private void viewTransactionHistory() {
        if (transactionHistory.isEmpty()) {
            System.out.println("No transactions available.");
        } else {
            System.out.println("Transaction History:");
            for (String transaction : transactionHistory) {
                System.out.println(transaction);
            }
        }
    }

    private void changePin() {
        System.out.print("Enter current PIN: ");
        int currentPin = scanner.nextInt();
        if (currentPin == pin) {
            System.out.print("Enter new PIN: ");
            int newPin = scanner.nextInt();
            System.out.print("Confirm new PIN: ");
            int confirmPin = scanner.nextInt();
            if (newPin == confirmPin) {
                pin = newPin;
                System.out.println("PIN successfully changed.");
            } else {
                System.out.println("PINs do not match. Please try again.");
            }
        } else {
            System.out.println("Incorrect current PIN. Please try again.");
        }
    }
}
